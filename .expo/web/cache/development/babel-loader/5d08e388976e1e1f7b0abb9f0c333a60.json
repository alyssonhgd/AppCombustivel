{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport estilos from \"../estilos\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport { SafeAreaView } from 'react-navigation';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ListaAbastecimento() {\n  var _useState = useState([{\n    id: 0,\n    nomeVeiculo: '',\n    consumoGasolina: '',\n    consumoAlcool: '',\n    precoGasolina: '',\n    precoAlcool: '',\n    date: ''\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      ListaAbastecimento = _useState2[0],\n      setLista = _useState2[1];\n\n  useEffect(function () {\n    RecuperaDadosStorage();\n  }, []);\n\n  function RecuperaDadosStorage() {\n    var lista;\n    return _regeneratorRuntime.async(function RecuperaDadosStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('ListaAbastecimento'));\n\n          case 3:\n            lista = _context.sent;\n            if (lista !== null) setLista(JSON.parse(lista));\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert(\"Lista de Abastecimento nao foi carregada!\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  return _jsxs(View, {\n    style: estilos.fundo,\n    children: [_jsx(ScrollView, {\n      children: _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            textAlign: 'center',\n            paddingTop: 15,\n            fontSize: 20\n          },\n          children: \" Lista dos \\xFAltimos Abastecimentos\"\n        }), _jsx(FlatList, {\n          style: {\n            paddingTop: 30,\n            paddingLeft: 15,\n            paddingRight: 15,\n            paddingBottom: 15,\n            height: 300\n          },\n          data: ListaAbastecimento,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(Text, {\n              style: {\n                backgroundColor: '#444',\n                textAlign: 'center',\n                borderRadius: 12,\n                paddingBottom: 10,\n                marginBottom: 15\n              },\n              children: ['\\n', 'Abastecimento: ' + item.id + '\\n' + '\\n', 'Nome do Veiculo:' + item.nomeVeiculo + '\\n', 'Consumo na Gasolina:' + item.consumoGasolina + '\\n', 'Consumo no Alcool:' + item.consumoAlcool + '\\n' + '\\n']\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          }\n        })]\n      })\n    }), _jsx(View, {\n      style: {\n        borderRadius: 20,\n        backgroundColor: 'gray',\n        height: 250,\n        paddingTop: 15,\n        paddingLeft: 15,\n        paddingRight: 15,\n        width: '100%'\n      },\n      children: _jsx(Text, {\n        style: {\n          textAlign: 'center',\n          paddingTop: 15,\n          fontSize: 20\n        },\n        children: \"Informa\\xE7\\xF5es Gerais\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","React","Component","useState","useEffect","LinearGradient","estilos","AsyncStorage","useNavigation","SafeAreaView","ListaAbastecimento","id","nomeVeiculo","consumoGasolina","consumoAlcool","precoGasolina","precoAlcool","date","setLista","RecuperaDadosStorage","getItem","lista","JSON","parse","Alert","alert","fundo","textAlign","paddingTop","fontSize","paddingLeft","paddingRight","paddingBottom","height","item","backgroundColor","borderRadius","marginBottom","width"],"sources":["C:/Users/alyss.DESKTOP-PCALYSO/Documents/AppNutri/AppCombustivel/AppCombustivel/Componentes/ListaAbastecimentos.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { TextInput, Alert, Button, StyleSheet, Text, View, FlatList, ScrollView } from \"react-native\";\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport estilos from '../estilos';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { SafeAreaView } from 'react-navigation';\r\n\r\nexport default function ListaAbastecimento() {\r\n\r\n\r\n    const [ListaAbastecimento, setLista] = useState([\r\n        {\r\n            id: 0,\r\n            nomeVeiculo: '',\r\n            consumoGasolina: '',\r\n            consumoAlcool: '',\r\n            precoGasolina: '',\r\n            precoAlcool: '',\r\n            date: ''\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        RecuperaDadosStorage();\r\n    }, []);\r\n\r\n\r\n    async function RecuperaDadosStorage() {\r\n        try {\r\n            const lista = await AsyncStorage.getItem('ListaAbastecimento');\r\n            if (lista !== null)\r\n                setLista(JSON.parse(lista)); \r\n        }\r\n        catch (error) {\r\n            Alert.alert(\"Lista de Abastecimento nao foi carregada!\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <View style={estilos.fundo}>\r\n        <ScrollView>\r\n        <View>\r\n            <Text style={{textAlign:'center'\r\n                        ,paddingTop:15,fontSize:20}}> Lista dos últimos Abastecimentos</Text>\r\n\r\n            <FlatList  style={{paddingTop:30,\r\n                paddingLeft:15,\r\n                paddingRight:15,\r\n                paddingBottom:15,\r\n                height:300}}    \r\n                data={(ListaAbastecimento)}                           \r\n                renderItem={({ item }) => (               \r\n                    <Text style={{backgroundColor: '#444',\r\n                    textAlign:'center',borderRadius:12,\r\n                    paddingBottom:10,\r\n                    marginBottom:15}}>                       \r\n                        {'\\n'}\r\n                        {'Abastecimento: '+item.id+'\\n'+'\\n'}\r\n                        {'Nome do Veiculo:' + item.nomeVeiculo + '\\n'}\r\n                        {'Consumo na Gasolina:' + item.consumoGasolina + '\\n'}\r\n                        {'Consumo no Alcool:' + item.consumoAlcool + '\\n'+'\\n'}                       \r\n                    </Text>\r\n                    )}\r\n                \r\n                keyExtractor={(item) => item.id}\r\n            />\r\n        </View>\r\n    \r\n        </ScrollView>\r\n        <View style={{borderRadius:20,\r\n            backgroundColor:'gray',\r\n            height:250,\r\n            paddingTop:15,\r\n            paddingLeft:15,\r\n            paddingRight:15,\r\n            width:'100%'}}>\r\n                 <Text style={{textAlign:'center'\r\n                        ,paddingTop:15,fontSize:20}}>Informações Gerais</Text>       \r\n        </View>\r\n        </View>\r\n    );\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport estilos from \"../estilos\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ListaAbastecimento() {\n  var _useState = useState([{\n    id: '',\n    nomeVeiculo: '',\n    consumoGasolina: '',\n    consumoAlcool: '',\n    precoGasolina: '',\n    precoAlcool: '',\n    date: ''\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      ListaAbastecimento = _useState2[0],\n      setLista = _useState2[1];\n\n  useEffect(function () {\n    RecuperaDadosStorage();\n  }, []);\n\n  function RecuperaDadosStorage() {\n    var lista;\n    return _regeneratorRuntime.async(function RecuperaDadosStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('ListaAbastecimento'));\n\n          case 3:\n            lista = _context.sent;\n            if (lista !== null) setLista(JSON.parse(lista));\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert(\"Lista de Abastecimento nao foi carregada!\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  return _jsxs(View, {\n    children: [_jsx(FlatList, {\n      contentContainerStyle: {\n        backgroundColor: '#444'\n      },\n      data: ListaAbastecimento,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n\n        _jsxs(Text, {\n          children: ['Nome do Veiculo:' + item.nomeVeiculo + '\\n', 'Consumo na Gasolina:' + item.consumoGasolina + '\\n', 'Consumo no Alcool:' + item.consumoAlcool + '\\n']\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.map(function (i) {\n          return i.id;\n        });\n      }\n    }), _jsxs(Text, {\n      children: [\"Nome do Veiculo: \", item.nomeVeiculo]\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","React","Component","useState","useEffect","LinearGradient","estilos","AsyncStorage","useNavigation","ListaAbastecimento","id","nomeVeiculo","consumoGasolina","consumoAlcool","precoGasolina","precoAlcool","date","setLista","RecuperaDadosStorage","getItem","lista","JSON","parse","Alert","alert","backgroundColor","item","map","i"],"sources":["C:/Users/alyss.DESKTOP-PCALYSO/Documents/AppNutri/AppCombustivel/AppCombustivel/Componentes/ListaAbastecimentos.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { TextInput, Alert, Button, StyleSheet, Text, View, FlatList, ScrollView } from \"react-native\";\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport estilos from '../estilos';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport default function ListaAbastecimento() {\r\n\r\n\r\n    const [ListaAbastecimento, setLista] = useState([\r\n        {\r\n            id:'',\r\n            nomeVeiculo: '',\r\n            consumoGasolina: '',\r\n            consumoAlcool: '',\r\n            precoGasolina: '',\r\n            precoAlcool: '',\r\n            date: ''\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        RecuperaDadosStorage();\r\n    }, []);\r\n        \r\n\r\n    async function RecuperaDadosStorage() {\r\n        try {\r\n            const lista = await AsyncStorage.getItem('ListaAbastecimento');\r\n            if (lista !== null)\r\n                setLista(JSON.parse(lista));\r\n        }\r\n        catch (error) {\r\n            Alert.alert(\"Lista de Abastecimento nao foi carregada!\");\r\n        }\r\n    }\r\n\r\n\r\n       \r\n\r\n\r\n    return (\r\n        //<ScrollView style={estilos.background}>\r\n\r\n        <View>\r\n            <FlatList\r\n                contentContainerStyle={{backgroundColor :'#444'}} \r\n                data={(ListaAbastecimento)}\r\n                renderItem={({ item }) => {\r\n                    \r\n                    <Text>\r\n                    {'Nome do Veiculo:' + item.nomeVeiculo +'\\n'}\r\n                    {'Consumo na Gasolina:' + item.consumoGasolina +'\\n'}\r\n                    {'Consumo no Alcool:' + item.consumoAlcool +'\\n'}\r\n                  </Text>\r\n                }}\r\n                keyExtractor={item => item.map(i => i.id)}\r\n                \r\n            />\r\n            <Text>\r\n                Nome do Veiculo: {item.nomeVeiculo}\r\n                </Text>\r\n        </View>\r\n            \r\n        //</ScrollView>\r\n    );\r\n\r\n}"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;;;;;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,OAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AAEA,eAAe,SAASC,kBAAT,GAA8B;EAGzC,gBAAuCN,QAAQ,CAAC,CAC5C;IACIO,EAAE,EAAC,EADP;IAEIC,WAAW,EAAE,EAFjB;IAGIC,eAAe,EAAE,EAHrB;IAIIC,aAAa,EAAE,EAJnB;IAKIC,aAAa,EAAE,EALnB;IAMIC,WAAW,EAAE,EANjB;IAOIC,IAAI,EAAE;EAPV,CAD4C,CAAD,CAA/C;EAAA;EAAA,IAAOP,kBAAP;EAAA,IAA2BQ,QAA3B;;EAYAb,SAAS,CAAC,YAAM;IACZc,oBAAoB;EACvB,CAFQ,EAEN,EAFM,CAAT;;EAKA,SAAeA,oBAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAE4BX,YAAY,CAACY,OAAb,CAAqB,oBAArB,CAF5B;;UAAA;YAEcC,KAFd;YAGQ,IAAIA,KAAK,KAAK,IAAd,EACIH,QAAQ,CAACI,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAD,CAAR;YAJZ;YAAA;;UAAA;YAAA;YAAA;YAOQG,KAAK,CAACC,KAAN,CAAY,2CAAZ;;UAPR;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAeA,OAGI,MAAC,IAAD;IAAA,WACI,KAAC,QAAD;MACI,qBAAqB,EAAE;QAACC,eAAe,EAAE;MAAlB,CAD3B;MAEI,IAAI,EAAGhB,kBAFX;MAGI,UAAU,EAAE,0BAAc;QAAA,IAAXiB,IAAW,QAAXA,IAAW;;QAEtB,MAAC,IAAD;UAAA,WACC,qBAAqBA,IAAI,CAACf,WAA1B,GAAuC,IADxC,EAEC,yBAAyBe,IAAI,CAACd,eAA9B,GAA+C,IAFhD,EAGC,uBAAuBc,IAAI,CAACb,aAA5B,GAA2C,IAH5C;QAAA;MAKH,CAVL;MAWI,YAAY,EAAE,sBAAAa,IAAI;QAAA,OAAIA,IAAI,CAACC,GAAL,CAAS,UAAAC,CAAC;UAAA,OAAIA,CAAC,CAAClB,EAAN;QAAA,CAAV,CAAJ;MAAA;IAXtB,EADJ,EAeI,MAAC,IAAD;MAAA,gCACsBgB,IAAI,CAACf,WAD3B;IAAA,EAfJ;EAAA,EAHJ;AA0BH"},"metadata":{},"sourceType":"module"}
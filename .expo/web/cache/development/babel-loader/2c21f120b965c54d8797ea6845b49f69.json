{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport estilos from \"../estilos\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport { SafeAreaView } from 'react-navigation';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ListaAbastecimento() {\n  var _useState = useState([{\n    id: 0,\n    nomePosto: '',\n    quantidadeAbastecida: '',\n    valorPago: '',\n    date: ''\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      ListaAbastecimento = _useState2[0],\n      setLista = _useState2[1];\n\n  useEffect(function () {\n    RecuperaDadosStorage();\n  }, []);\n\n  function RecuperaDadosStorage() {\n    var lista;\n    return _regeneratorRuntime.async(function RecuperaDadosStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"ListaAbastecimento\"));\n\n          case 3:\n            lista = _context.sent;\n            if (lista !== null) setLista(JSON.parse(lista));\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  return _jsxs(View, {\n    style: estilos.fundo,\n    children: [_jsx(Text, {\n      style: {\n        textAlign: 'center',\n        paddingTop: 15,\n        fontSize: 20\n      },\n      children: \" Lista dos \\xFAltimos Abastecimentos\"\n    }), _jsx(ScrollView, {\n      children: _jsx(FlatList, {\n        style: {\n          paddingTop: 30,\n          paddingLeft: 15,\n          paddingRight: 15,\n          paddingBottom: 20,\n          height: 300\n        },\n        data: ListaAbastecimento,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsxs(Text, {\n            style: {\n              backgroundColor: 'gray',\n              textAlign: 'center',\n              borderRadius: 12,\n              paddingBottom: 10,\n              marginBottom: 15\n            },\n            children: ['\\n', 'Abastecimento: ' + item.id + '\\n' + '\\n', 'Nome do Posto:' + item.nomePosto + '\\n', 'Quantidade Abastecida:' + item.quantidadeAbastecida + 'L' + '\\n', 'Valor Pago:' + 'R$' + item.valorPago + '\\n', 'Data:' + item.date + '\\n' + '\\n']\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      })\n    }), _jsxs(View, {\n      style: {\n        borderRadius: 20,\n        backgroundColor: 'gray',\n        height: 200,\n        paddingTop: 15,\n        paddingLeft: 15,\n        paddingRight: 15,\n        width: '100%'\n      },\n      children: [_jsx(Text, {\n        style: {\n          textAlign: 'center',\n          paddingTop: 15,\n          paddingBottom: 15,\n          fontSize: 20\n        },\n        children: \"Informa\\xE7\\xF5es Gerais\"\n      }), _jsx(View, {\n        style: {\n          paddingTop: 20,\n          paddingBottom: 15,\n          width: '100%',\n          borderRadius: 12,\n          fontSize: 15,\n          backgroundColor: 'white'\n        },\n        children: _jsxs(Text, {\n          children: [\"Quantidade de abastecimentos: \", ListaAbastecimento.length + '\\n', \"Litragem Total abastecida no m\\xEAs:\", litragemTotal]\n        })\n      })]\n    })]\n  });\n\n  function litragemTotal() {\n    var _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        total = _useState4[0],\n        setTotal = _useState4[1];\n\n    ListaAbastecimento.map(function (quantidadeAbastecida) {\n      setTotal(total + parseFloat(quantidadeAbastecida));\n      Console.log({\n        total: total\n      });\n    });\n    return _jsx(Text, {\n      children: total\n    });\n  }\n}","map":{"version":3,"names":["StatusBar","React","Component","useState","useEffect","LinearGradient","estilos","AsyncStorage","useNavigation","SafeAreaView","ListaAbastecimento","id","nomePosto","quantidadeAbastecida","valorPago","date","setLista","RecuperaDadosStorage","getItem","lista","JSON","parse","fundo","textAlign","paddingTop","fontSize","paddingLeft","paddingRight","paddingBottom","height","item","backgroundColor","borderRadius","marginBottom","width","length","litragemTotal","total","setTotal","map","parseFloat","Console","log"],"sources":["C:/Users/alyss.DESKTOP-PCALYSO/Documents/AppNutri/AppCombustivel/AppCombustivel/Componentes/ListaAbastecimentos.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { TextInput, Alert, Button, StyleSheet, Text, View, FlatList, ScrollView } from \"react-native\";\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport estilos from '../estilos';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { SafeAreaView } from 'react-navigation';\r\n\r\n\r\nexport default function ListaAbastecimento() {\r\n\r\n\r\n    const [ListaAbastecimento, setLista] = useState([\r\n        {\r\n            id: 0,\r\n            nomePosto: '',\r\n            quantidadeAbastecida: '',\r\n            valorPago: '',\r\n            date: ''\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        RecuperaDadosStorage();\r\n    }, []);\r\n\r\n\r\n    async function RecuperaDadosStorage() {\r\n        try {\r\n            const lista = await AsyncStorage.getItem(\"ListaAbastecimento\");\r\n            if (lista !== null) \r\n            setLista(JSON.parse(lista));\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={estilos.fundo}>\r\n             <Text style={{textAlign:'center'\r\n                        ,paddingTop:15,fontSize:20}}> Lista dos últimos Abastecimentos</Text>\r\n\r\n        <ScrollView>\r\n                  \r\n            <FlatList  style={{\r\n                paddingTop:30,\r\n                paddingLeft:15,\r\n                paddingRight:15,\r\n                paddingBottom:20,\r\n                height:300\r\n            }}    \r\n                data={(ListaAbastecimento)}                           \r\n                renderItem={({ item }) => (               \r\n                    <Text style={{backgroundColor: 'gray',\r\n                    textAlign:'center',borderRadius:12,\r\n                    paddingBottom:10,\r\n                    marginBottom:15}}>                       \r\n                        {'\\n'}\r\n                        {'Abastecimento: '+item.id+'\\n'+'\\n'}\r\n                        {'Nome do Posto:' + item.nomePosto + '\\n'}\r\n                        {'Quantidade Abastecida:' + item.quantidadeAbastecida +'L'+'\\n'}\r\n                        {'Valor Pago:' +'R$'+item.valorPago + '\\n'} \r\n                        {'Data:' + item.date + '\\n'+'\\n'}                      \r\n                    </Text>\r\n                    )}\r\n                \r\n                keyExtractor={(item) => item.id}\r\n            />\r\n        \r\n    \r\n        </ScrollView>\r\n        <View style={{borderRadius:20,\r\n            backgroundColor:'gray',\r\n            height:200,\r\n            paddingTop:15,\r\n            paddingLeft:15,\r\n            paddingRight:15,\r\n            width:'100%'}}>\r\n                 <Text style={{textAlign:'center'\r\n                        ,paddingTop:15,paddingBottom:15,fontSize:20}}>Informações Gerais</Text>  \r\n\r\n                        <View style={{\r\n                        paddingTop:20,paddingBottom:15,width:'100%',borderRadius:12,fontSize:15,backgroundColor:'white'}}>\r\n                        <Text>\r\n                        Quantidade de abastecimentos: {ListaAbastecimento.length+'\\n'}\r\n                        Litragem Total abastecida no mês:{litragemTotal}\r\n                        </Text>\r\n                        </View>     \r\n        </View>\r\n        </View>\r\n    );\r\nfunction litragemTotal(){\r\n    const[total,setTotal] =useState(0);\r\n\r\n    ListaAbastecimento.map((quantidadeAbastecida)=>{\r\n        setTotal(total + (parseFloat(quantidadeAbastecida)));\r\n        Console.log({total});\r\n    });\r\n    return(\r\n        <Text>{total}</Text>\r\n        \r\n    )\r\n}\r\n    \r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport estilos from \"../estilos\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport ListaAbastecimentos from \"./ListaAbastecimentos\";\nimport { NavigationContainer, StackActions } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AddAbastecimento() {\n  var navigation = useNavigation();\n\n  var _useState = useState([{\n    id: 0,\n    nomePosto: '',\n    quantidadeAbastecida: '',\n    valorPago: '',\n    date: ''\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      ListaAbastecimento = _useState2[0],\n      setLista = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      id = _useState4[0],\n      setId = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputNomePosto = _useState6[0],\n      setInputNomePosto = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inputQuantidadeAbastecida = _useState8[0],\n      setInputQuantidadeAbastecida = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputValorPago = _useState10[0],\n      setInputValorPago = _useState10[1];\n\n  var _useState11 = useState(new Date().toDateString()),\n      _useState12 = _slicedToArray(_useState11, 2),\n      date = _useState12[0],\n      setDate = _useState12[1];\n\n  function verificaEntrada() {\n    if (inputNomePosto === '') {\n      Alert.alert(\"Informe o nome do posto!\");\n      return;\n    } else if (inputQuantidadeAbastecida === '') {\n      Alert.alert(\"Informe a quantidade de litros abastecido.\");\n      return;\n    } else if (inputValorPago === '') {\n      Alert.alert(\"Informe o valor pago pelo abastecimento\");\n      return;\n    } else {\n      adicionaLista();\n      GuardaDadosStorage();\n      Alert.alert(\"Dados Salvos!\");\n      setId(0);\n      setInputNomePosto('');\n      setInputQuantidadeAbastecida('');\n      setInputValorPago('');\n      return;\n    }\n  }\n\n  function GuardaDadosStorage() {\n    return _regeneratorRuntime.async(function GuardaDadosStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"ListaAbastecimento\", JSON.stringify(ListaAbastecimento)));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert('O abastecimento nao foi salvo!');\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  function RecuperaDadosStorage() {\n    var lista;\n    return _regeneratorRuntime.async(function RecuperaDadosStorage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"ListaAbastecimento\"));\n\n          case 3:\n            lista = _context2.sent;\n            if (lista !== null) setTarefas(JSON.parse(ListaAbastecimento));\n            _context2.next = 9;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  var adicionaLista = function adicionaLista() {\n    setLista(function (listaAnterior) {\n      return [].concat(_toConsumableArray(listaAnterior), [{\n        id: ListaAbastecimento.length,\n        nomePosto: inputNomePosto,\n        quantidadeAbastecida: inputQuantidadeAbastecida,\n        valorPago: inputValorPago,\n        date: date\n      }]);\n    });\n  };\n\n  useEffect(function () {\n    RecuperaDadosStorage();\n  }, []);\n  useEffect(function () {\n    GuardaDadosStorage();\n  }, [ListaAbastecimento]);\n\n  function LogoApp() {\n    return _jsx(Image, {\n      source: {\n        uri: './Imagens/gasolina.png'\n      },\n      resizeMode: \"contain\"\n    });\n  }\n\n  return _jsxs(View, {\n    style: estilos.background,\n    children: [_jsx(TextInput, {\n      style: estilos.input,\n      placeholder: \"Digite o Nome do posto de combust\\xEDveis\",\n      value: inputNomePosto,\n      onChangeText: function onChangeText(texto) {\n        return setInputNomePosto(texto);\n      }\n    }), _jsx(TextInput, {\n      style: estilos.input,\n      placeholder: \"Digite a litragem abastecida\",\n      keyboardType: \"decimal-pad\",\n      value: inputQuantidadeAbastecida,\n      onChangeText: function onChangeText(quantidade) {\n        return setInputQuantidadeAbastecida(quantidade);\n      }\n    }), _jsx(TextInput, {\n      style: estilos.input,\n      placeholder: \"Digite o valor total pago\",\n      keyboardType: \"decimal-pad\",\n      value: inputValorPago,\n      onChangeText: function onChangeText(valorpago) {\n        return setInputValorPago(valorpago);\n      }\n    }), _jsx(Text, {\n      children: '\\n'\n    }), _jsx(Button, {\n      color: \"#841584\",\n      onPress: verificaEntrada,\n      title: \"Salvar\"\n    }), _jsx(Text, {\n      children: '\\n'\n    }), _jsx(LogoApp, {}), _jsx(Button, {\n      color: \"#841584\",\n      onPress: function onPress() {\n        return navigation.navigate('ListaAbastecimento');\n      },\n      title: \"Acompanhar Abastecimentos\"\n    }), _jsx(Text, {\n      children: '\\n'\n    }), _jsx(Button, {\n      style: {},\n      color: \"#841584\",\n      title: \"Limpar Abastecimentos\"\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","React","Component","useState","useEffect","LinearGradient","estilos","AsyncStorage","ListaAbastecimentos","NavigationContainer","StackActions","createNativeStackNavigator","useNavigation","AddAbastecimento","navigation","id","nomePosto","quantidadeAbastecida","valorPago","date","ListaAbastecimento","setLista","setId","inputNomePosto","setInputNomePosto","inputQuantidadeAbastecida","setInputQuantidadeAbastecida","inputValorPago","setInputValorPago","Date","toDateString","setDate","verificaEntrada","Alert","alert","adicionaLista","GuardaDadosStorage","setItem","JSON","stringify","RecuperaDadosStorage","getItem","lista","setTarefas","parse","listaAnterior","length","LogoApp","uri","background","input","texto","quantidade","valorpago","navigate"],"sources":["C:/Users/alyss.DESKTOP-PCALYSO/Documents/AppNutri/AppCombustivel/AppCombustivel/Componentes/AddAbastecimento.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { TextInput, Alert, Button, StyleSheet, Text, View, Image } from \"react-native\";\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport estilos from '../estilos';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport ListaAbastecimentos from './ListaAbastecimentos';\r\nimport { NavigationContainer, StackActions } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport default function AddAbastecimento() {\r\n\r\n    const navigation = useNavigation();\r\n    const [ListaAbastecimento, setLista] = useState([\r\n        {\r\n            id: 0,\r\n            nomePosto: '',\r\n            quantidadeAbastecida: '',\r\n            valorPago: '',\r\n            date:''\r\n        }\r\n    ]);\r\n\r\n\r\n    const [id,setId]=useState('');\r\n    const [inputNomePosto, setInputNomePosto] = useState('');\r\n    const [inputQuantidadeAbastecida, setInputQuantidadeAbastecida] = useState('');\r\n    const [inputValorPago, setInputValorPago] = useState('');\r\n    const [date, setDate] = useState(new Date().toDateString());\r\n\r\n\r\n    function verificaEntrada() {\r\n\r\n        if (inputNomePosto === '') {\r\n            Alert.alert(\"Informe o nome do posto!\");\r\n            return;\r\n        }\r\n        else if (inputQuantidadeAbastecida === '') {\r\n            Alert.alert(\"Informe a quantidade de litros abastecido.\");\r\n            return;\r\n        }\r\n        else if (inputValorPago === '') {\r\n            Alert.alert(\"Informe o valor pago pelo abastecimento\");\r\n            return;\r\n        }\r\n        \r\n        else {\r\n\r\n            adicionaLista();\r\n\r\n            GuardaDadosStorage();\r\n            Alert.alert(\"Dados Salvos!\");\r\n            \r\n            setId(0);\r\n            setInputNomePosto('');\r\n            setInputQuantidadeAbastecida('');\r\n            setInputValorPago('');\r\n            return;\r\n        }\r\n    }\r\n\r\n    async function GuardaDadosStorage() {\r\n        try {\r\n            await AsyncStorage.setItem(\"ListaAbastecimento\", JSON.stringify(ListaAbastecimento));\r\n\r\n        } catch (error) {\r\n            Alert.alert('O abastecimento nao foi salvo!');\r\n        }\r\n    }\r\n\r\n    async function RecuperaDadosStorage() {\r\n        try {\r\n            const lista = await AsyncStorage.getItem(\"ListaAbastecimento\");\r\n            if (lista !== null) setTarefas(JSON.parse(ListaAbastecimento));\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    const adicionaLista=()=>{\r\n        setLista((listaAnterior) => [\r\n            ...listaAnterior,\r\n            {\r\n                id:(ListaAbastecimento).length,\r\n                nomePosto:inputNomePosto,\r\n                quantidadeAbastecida:inputQuantidadeAbastecida,\r\n                valorPago:inputValorPago,\r\n                date:date\r\n            }\r\n        ]);\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        RecuperaDadosStorage();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        GuardaDadosStorage();\r\n    }, [ListaAbastecimento]);\r\n\r\n\r\n    function LogoApp() {\r\n        return (\r\n          <Image\r\n            source={{uri: './Imagens/gasolina.png'}}\r\n            resizeMode='contain'\r\n          />\r\n        );\r\n      }\r\n\r\n\r\n    return (\r\n\r\n        <View style={estilos.background}>\r\n           \r\n            <TextInput style={estilos.input}\r\n                placeholder=\"Digite o Nome do posto de combustíveis\"\r\n                value={inputNomePosto}\r\n                onChangeText={(texto) => setInputNomePosto(texto)}\r\n\r\n            />\r\n            <TextInput style={estilos.input}\r\n                placeholder=\"Digite a litragem abastecida\"\r\n                keyboardType=\"decimal-pad\"\r\n                value={inputQuantidadeAbastecida}\r\n                onChangeText={(quantidade) => setInputQuantidadeAbastecida(quantidade)}\r\n\r\n            />\r\n            <TextInput style={estilos.input}\r\n                placeholder=\"Digite o valor total pago\"\r\n                keyboardType=\"decimal-pad\"\r\n                value={inputValorPago}\r\n                onChangeText={(valorpago) => setInputValorPago(valorpago)}\r\n\r\n            />\r\n           \r\n            <Text>{'\\n'}</Text>\r\n            <Button color='#841584' onPress={verificaEntrada} title=\"Salvar\"></Button>\r\n            <Text>{'\\n'}</Text>\r\n            <LogoApp></LogoApp>\r\n            <Button color='#841584' onPress={() => navigation.navigate('ListaAbastecimento')} title=\"Acompanhar Abastecimentos\"></Button>\r\n            <Text>{'\\n'}</Text>\r\n            <Button style={{}}  color='#841584' title=\"Limpar Abastecimentos\"></Button>\r\n        </View>\r\n\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}